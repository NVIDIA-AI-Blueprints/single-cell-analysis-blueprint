name: Runner Env Checking
run-name: ${{ github.actor }} is running Draft Runner

on:
  push:
    branches:
      - main
      - johnnynv-patch-dev
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deploy Environment'
        required: true
        default: 'staging'
jobs:
  Runner-Env-Check:
    # runs-on: ubuntu-latest
    runs-on: arc-runner-set-oke-org-poc
    # runs-on: arc-runner-set-oke-org-nv-ai-bp
    env:
      # NOTEBOOK_PATH: ./launchable/1_Deploy_LLM_Router.ipynb
      NOTEBOOK_PATH: ./notebooks/01_scRNA_analysis_preprocessing.ipynb
      DOCKER_COMPOSE_FILE: ./docker/brev/docker-compose-nb-2506.yaml 
      PYTHON_VERSION: 3.12

    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}

      - uses: ./.github/actions/check-sysinfo

      - uses: ./.github/actions/setup-env
        with:
          python-version: '3.12'
          check-disk: 'false'

      - name: Install dependencies
        env:
          NGC_API_Key: ${{ secrets.NGC_API_KEY }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install papermill
          pip install ipywidgets
          pip install torch
          # Install wget
          sudo apt-get update
          sudo apt-get install wget
          # Install Docker and Docker Compose in a single step
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh
          sudo apt-get update
          sudo apt-get install -y docker-compose-plugin docker-compose build-essential
          # Get System Info
          echo "===================== System Info ====================="
          more /etc/os-release
          nvidia-smi
          docker version
          docker compose version
        shell: bash

      - name: Pull large image first
        run: |
          # export COMPOSE_HTTP_TIMEOUT=600
          docker pull nvcr.io/nvidia/rapidsai/notebooks:25.06-cuda12.8-py3.12

      - name: Start container
        run: |
          export COMPOSE_HTTP_TIMEOUT=300
          docker images -a
          echo "Docker compose will use file: $DOCKER_COMPOSE_FILE"
          docker compose --verbose -f "$DOCKER_COMPOSE_FILE" up -d

      - name: Debug container logs
        if: ${{ failure() }}
        run: |
          docker ps -a
          # docker system df
          # docker stats
          docker logs brev_backend_1

      - name: Check running containers
        run: docker ps -a

      # - name: Test service
      #   run: |
      #     curl -sSf http://localhost:8080
      #     docker-compose exec -T service_name pytest /tests

      - name: Stop containers
        if: ${{ always() }}
        run: docker-compose -f "$DOCKER_COMPOSE_FILE" down
      
name: Cache specific base images

on: [push]

jobs:
  test-on-something:
    runs-on: ubuntu-latest
    # environment: johnny_dev_env
    steps:
      - name: Check docker images
        run: docker images -a

      - name: Cache Node.js Docker image
        id: cache-node
        if: always()
        uses: actions/cache@v3
        with:
          path: /tmp/docker-cache
          key: node-18-image-${{ runner.os }}

      - name: Load cached Node.js image
        if: steps.cache-node.outputs.cache-hit == 'true'
        run: |
          if [ -f /tmp/docker-cache/node-18.tar ]; then
            docker load -i /tmp/docker-cache/node-18.tar
          fi

      - name: Pull Node.js image
        run: |
          if ! docker image inspect node:18 >/dev/null 2>&1; then
            docker pull node:18
            mkdir -p /tmp/docker-cache
            docker save -o /tmp/docker-cache/node-18.tar node:18
          fi
      
      - name: List all caches (via GitHub API)
        env:
          # GITHUB_TOKEN: ${{ secrets.JOHNNY_DEV_GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        run: |
          for i in {1..3}; do
            echo "Attempt $i: Querying cache..."
            response=$(curl -s \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/actions/caches?key=node-18-image")

            total_count=$(echo "$response" | jq -r '.total_count')
            if [ "$total_count" -gt 0 ]; then
              echo "$response" | jq .
              echo "Cache found!"
              break
            else
              echo "Cache not yet available. Retrying in 10 seconds..."
              sleep 10
            fi
          done

          if [ "$total_count" -eq 0 ]; then
            echo "Error: Cache still not found after 3 attempts."
            exit 1
          fi

      - name: Check docker images
        run: docker images -a
